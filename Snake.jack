class Snake 
{
    // 0 = esquerda, 1 = cima, 2 = direita, 3 = baixo 
    field int direction, length, maxLengthX, maxLengthY;
    field Array snakeX, snakeY;

    constructor Snake new(int initialLength, int initialDirection, int maxX, int maxY)
    {
        var int i;
       
        let length = initialLength;

        let maxLengthX = maxX - 10;
        let maxLengthY = maxY - 10;

        let snakeX = Array.new(maxX);
        let snakeY = Array.new(maxY);
        let direction = initialDirection;
        
        let i = length;

        while(i > -1)
        {
            let snakeX[i] = 206+(i*10);
            let snakeY[i] = 128;
            let i = i - 1;
        }

        return this;
    }

    // adiciona uma nova cabeça e deleta o rabo da cobra (movimentação da cobra)
    method void nextPosition()
    {   
        do drawSnake(false);
        do pushSnake();
        do popSnake();
        do drawSnake(true);
        return;
    }

    // checa se a cobra não bateu nela mesma
    method boolean checkCollision() 
    {
        return true;
    }

    // desenha/apaga a cobra na tela
    method void drawSnake(boolean flag)
    {
        var int i, posX, posY;

        let i = length;
        while (i > -1)
        {
            let posX = snakeX[i];
            let posY = snakeY[i];

            do Screen.setColor(flag);
            do Screen.drawRectangle(posX, posY, posX+8, posY+8);
            let i = i - 1;
        }
        return;
    }


    // cresce a cobra
    method void growSnake()
    {
        do pushSnake();
        let length = length + 1;
        return;
    }

    method void isWall()
    {
        var int left, right, up, down;

        let left = snakeX[length] - 10;
        let right = snakeX[length] + 20;
        let up = snakeY[length] - 10;
        let down = snakeY[length] + 20;
        
        if (right > 512)
        {
            let snakeX[length] = 0;
        }
        
        if (left < 0)
        {
            let snakeX[length] = maxLengthX;
        }
        
        if (down > 256)
        {
            let snakeY[length] = 0;
        }

        if (up < 0)
        {
            let snakeY[length] = maxLengthY;
        }
        return;
    }

    // cria uma nova cabeça (depende da variável direction)
    method void pushSnake()
    {
        var int i;

        do isWall();
        
        let i = length + 1;

        let snakeX[i] = snakeX[i - 1];
        let snakeY[i] = snakeY[i - 1];

        if (direction = 0)
        {
            let snakeX[i] = snakeX[i] - 10;
        }

        if (direction = 1)
        {
            let snakeY[i] = snakeY[i] - 10;
        }

        if (direction = 2)
        {
            let snakeX[i] = snakeX[i] + 10;
        }

        if (direction = 3)
        {
            let snakeY[i] = snakeY[i] + 10;
        }
        return;
    }

    // seta a nova direção da cobra baseado na tecla que o player pressionou
    method void setDirection(int keyPressed)
    {
        // esquerda
        if (keyPressed = 130)
        {
            if (direction = 1)
            {
                let direction = 0;
            }
            if (direction = 3)
            {
                let direction = 0;
            }
        }

        // cima
        if (keyPressed = 131)
        {
            if (direction = 0)
            {
                let direction = 1;
            }
            if (direction = 2)
            {
                let direction = 1;
            }
        }

        // direita
        if (keyPressed = 132)
        {
            if (direction = 1)
            {
                let direction = 2;
            }
            if (direction = 3)
            {
                let direction = 2;
            }
        }

        // baixo
        if (keyPressed = 133)
        {
            if (direction = 0)
            {
                let direction = 3;
            }
            if (direction = 2)
            {
                let direction = 3;
            }
        }
        return;
    }

    // tira o rabo da cobra
    method void popSnake()
    {
        var int i, j;
        let i = 0;
        let j = length + 1;
        while (i < j)
        {
            let snakeX[i] = snakeX[i + 1];
            let snakeY[i] = snakeY[i + 1];

            let i = i + 1;
        }
        let snakeX[j] = 0;
        let snakeY[j] = 0;

        return;
    }
}